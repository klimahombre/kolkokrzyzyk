#Plansza 
board = [[0 for _ in range(COLS)] for _ in range(ROWS)]

vs_ai = False #zmienna globalna

def draw_lines():
    for i in range(1, ROWS):
        pygame.draw.line(screen, LINE_COLOR, (0, i * SQSIZE), (WIDTH, i * SQSIZE), 5)
        pygame.draw.line(screen, LINE_COLOR, (i * SQSIZE, 0), (i * SQSIZE, WIDTH), 5)

#dodanie funkcji oceniającej planszę i zwraca 10, jeśli AI (gracz 2) wygrywa, -10, jeśli gracz ludzki (gracz 1) wygrywa, 0, jeśli remis lub gra nie jest zakończona

def evaluate(board):
    if check_win(2): # AI (Player 2) wins
        return 10
    elif check_win(1): # Human (Player 1) wins
        return -10
    else:
        return 0

def minimax(board, depth, is_max):
    score = evaluate(board)

    if score == 10:
        return score
    if score == -10:
        return score
    if is_board_full():
        return 0

    if is_max:
        best = -sys.maxsize
        for r in range(ROWS):
            for c in range(COLS):
                if board[r][c] == 0:
                    board[r][c] = 2
                    best = max(best, minimax(board, depth + 1, not is_max))
                    board[r][c] = 0
        return best
    else:
        best = sys.maxsize
        for r in range(ROWS):
            for c in range(COLS):
                if board[r][c] == 0:
                    board[r][c] = 1
                    best = min(best, minimax(board, depth + 1, not is_max))
                    board[r][c] = 0
        return best
